-- Fuzzy Finder (files, lsp, etc)
return {
    -- 'nvim-telescope/telescope.nvim',
    -- branch = '0.1.x',
    -- cmd = 'Telescope',
    -- dependencies = {
    --     'nvim-lua/plenary.nvim',
    --     { -- If encountering errors, see telescope-fzf-native README for installation instructions
    --         'nvim-telescope/telescope-fzf-native.nvim',
    --
    --         -- `build` is used to run some command when the plugin is installed/updated.
    --         -- This is only run then, not every time Neovim starts up.
    --         build = 'make',
    --
    --         -- `cond` is a condition used to determine whether this plugin should be
    --         -- installed and loaded.
    --         cond = function()
    --             return vim.fn.executable 'make' == 1
    --         end,
    --     },
    --     { 'nvim-telescope/telescope-ui-select.nvim' },
    --
    --     -- Useful for getting pretty icons, but requires a Nerd Font.
    --     { 'nvim-tree/nvim-web-devicons', enabled = vim.g.have_nerd_font },
    -- },
    -- keys = {
    --         -- stylua: ignore start
    --         { '<leader><leader>', function() require('telescope.builtin').buffers() end, desc = '[ ] Find existing buffer' },
    --         { '<leader>s.', function() require('telescope.builtin').oldfiles() end, desc = '[S]earch Recent Files ("." for repeat)' },
    --         { '<leader>sc', function() require('telescope.builtin').colorscheme() end, desc = '[S]earch [C]olorschemes' },
    --         { '<leader>sd', function() require('telescope.builtin').diagnostics() end, desc = '[S]earch [D]iagnostics' },
    --         { '<leader>sf', function() require('telescope.builtin').find_files() end, desc = '[S]earch [F]iles' },
    --         { '<leader>sg', function() require('telescope.builtin').live_grep() end, desc = '[S]earch by [G]rep' },
    --         { '<leader>sh', function() require('telescope.builtin').help_tags() end, desc = '[S]earch [H]elp' },
    --         { '<leader>sk', function() require('telescope.builtin').keymaps() end, desc = '[S]earch [K]eymaps' },
    --         { '<leader>sr', function() require('telescope.builtin').resume() end, desc = '[S]earch [R]esume' },
    --         { '<leader>ss', function() require('telescope.builtin').builtin() end, desc = '[S]earch [S]elect Telescope' },
    --         { '<leader>sw', function() require('telescope.builtin').grep_string() end, desc = '[S]earch current [W]ord' },
    --     -- stylua: ignore end
    --     {
    --         '<leader>/',
    --         function()
    --             require('telescope.builtin').current_buffer_fuzzy_find(require('telescope.themes').get_dropdown {
    --                 winblend = 10,
    --                 previewer = false,
    --             })
    --         end,
    --         desc = '[/] Fuzzily search in current buffer',
    --     },
    --     {
    --         '<leader>s/',
    --         function()
    --             require('telescope.builtin').live_grep {
    --                 grep_open_files = true,
    --                 prompt_title = 'Live Grep in Open Files',
    --             }
    --         end,
    --         desc = '[S]earch [/] in Open Files',
    --     },
    --     {
    --         '<leader>sn',
    --         function()
    --             require('telescope.builtin').find_files {
    --                 cwd = vim.fn.stdpath 'config',
    --             }
    --         end,
    --         desc = '[S]earch [N]eovim files',
    --     },
    -- },
    -- config = function()
    --     -- [[ Configure Telescope ]]
    --     -- See `:help telescope` and `:help telescope.setup()`
    --     local status_ok, telescope = pcall(require, 'telescope')
    --     if not status_ok then
    --         return
    --     end
    --
    --     local actions = require 'telescope.actions'
    --
    --     telescope.setup {
    --         pickers = {
    --             find_files = {
    --                 hidden = true,
    --                 theme = 'dropdown',
    --             },
    --             live_grep = {
    --                 --@usage don't include the filename in the search results
    --                 only_sort_text = true,
    --                 theme = 'dropdown',
    --             },
    --             grep_string = {
    --                 only_sort_text = true,
    --             },
    --             buffers = {
    --                 theme = 'dropdown',
    --                 initial_mode = 'normal',
    --                 mappings = {
    --                     i = {
    --                         ['<C-d>'] = actions.delete_buffer,
    --                     },
    --                     n = {
    --                         ['dd'] = actions.delete_buffer,
    --                     },
    --                 },
    --             },
    --             planets = {
    --                 show_pluto = true,
    --                 show_moon = true,
    --             },
    --             git_files = {
    --                 hidden = true,
    --                 show_untracked = true,
    --             },
    --             colorscheme = {
    --                 theme = 'dropdown',
    --                 enable_preview = true,
    --             },
    --         },
    --         extensions = {
    --             ['ui-select'] = {
    --                 require('telescope.themes').get_dropdown(),
    --             },
    --         },
    --     }
    --
    --     -- Enable Telescope extensions if they are installed
    --     pcall(require('telescope').load_extension, 'fzf')
    --     pcall(require('telescope').load_extension, 'ui-select')
    -- end,
}
