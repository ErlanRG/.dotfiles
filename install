#!/usr/bin/env zsh
# Install dependencies

function detect_distro() {
    if [ -f "/etc/arch-release" ] || [ -f "/etc/artix-release" ]; then
        INSTALL="sudo pacman -S"
        
    # TODO: check the apt directory name on Debian based
    else
        INSTALL="sudo apt-get install -y"
    fi
}

function msg() {
  local text="$1"
  local div_width="80"
  printf "%${div_width}s\n" ' ' | tr ' ' -
  printf "%s\n" "$text"
}

function check_neovim_min_version() {
  local verify_version_cmd='if !has("nvim-0.6.1") | cquit | else | quit | endif'

  # exit with an error if min_version not found
  if ! nvim --headless -u NONE -c "$verify_version_cmd"; then
    echo "[ERROR]: Neovim configuration requires at least Neovim v0.6.1 or higher"
    exit 1
  fi
}

function bck_nvim_config() {
    if [[ -d ~/.config/nvim/ ]]; then
        echo "Backing up current nvim configuration"
        mv ~/.config/nvim ~/.config/old_nvim
    else
        echo "No nvim configuration found."
    fi
}

function bck_i3_config() {
    if [[ -d ~/.config/i3/ ]]; then
        echo "Backing up i3 current configuration"
        mv ~/.config/i3 ~/.config/old_i3
    else
        echo "No i3 configuration found."
    fi
}

function zsh_dependencies()
{
  # zsh dependencies:
  # oh-my-zsh installation
  if [ -d $HOME/.oh-my-zsh/ ]; then
    echo "oh-my-zsh already installed"
  else
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  echo "Checking zsh plugins..."
  # zsh-autosuggestions
  if [ -d $ZSH_CUSTOM/plugins/zsh-autosuggestions/ ]; then
    echo "zsh-autosuggestions already installed"
  else
    "Installing zsh-autosuggestions"
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

  # zsh-syntax-highlighting
  if [ -d $ZSH_CUSTOM/plugins/zsh-syntax-highlighting/ ]; then
    echo "zsh-syntax-highlighting already installed"
  else
    "Installing zsh-autosuggestions"
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
}

# TODO: function to check if it is a symlink
function check_packages() {
    
    # Check if Stow is installed
    if ! command -v stow &> /dev/null; then
        echo "Stow is not installed. Try $INSTALL stow and re-run the install script"
        exit 1
    fi

    # Check if Neovim is installed
    if ! command -v nvim &> /dev/null; then
        echo "Neovim is not installed. Try building from source and re-run the install script"
        exit 1
    fi

    check_neovim_min_version

    # Check if kitty is installed
    if ! command -v kitty &> /dev/null; then
        echo "Kitty is not installed. Try $INSTALL kitty and re-run the install script"
        exit 1
    fi

    # Check if zsh is installed
    if ! command -v zsh &> /dev/null; then
        echo "Zsh is not installed. Try $INSTALL zsh and re-run the install script"
        exit 1
    fi
    
    zsh_dependencies

    # Check if dunst is installed
    if ! command -v dunst &> /dev/null; then
        echo "Dunst is not installed. Try $INSTALL dunst and re-run the install script"
        exit 1
    fi
}

function run_stow() {
    if [[ -z $STOW_FOLDERS ]]; then
        STOW_FOLDERS=("dunst,i3wm,kitty,new_nvim,zsh,wallpaper")
    fi
    
    if [[ -z $DOTFILES ]]; then
        DOTFILES=$HOME/.dotfiles
    fi

    pushd $DOTFILES
    for folder in $(echo $STOW_FOLDERS | sed "s/,/ /g")
    do
        stow -D $folder
        stow $folder
    done
    popd
}

function print_logo () {
    cat << 'EOF'
            █████           █████       ██████   ███  ████                  
           ░░███           ░░███       ███░░███ ░░░  ░░███                  
         ███████   ██████  ███████    ░███ ░░░  ████  ░███   ██████   █████ 
        ███░░███  ███░░███░░░███░    ███████   ░░███  ░███  ███░░███ ███░░  
       ░███ ░███ ░███ ░███  ░███    ░░░███░     ░███  ░███ ░███████ ░░█████ 
       ░███ ░███ ░███ ░███  ░███ ███  ░███      ░███  ░███ ░███░░░   ░░░░███
     ██░░████████░░██████   ░░█████   █████     █████ █████░░██████  ██████ 
    ░░  ░░░░░░░░  ░░░░░░     ░░░░░   ░░░░░     ░░░░░ ░░░░░  ░░░░░░  ░░░░░░  
EOF
}

function main() {
    print_logo

    msg "Stowing everything..."
    detect_distro

    # Checking all packages
    check_packages
    msg "All packages are installed."

    # Backing up nvim config
    bck_nvim_config
    bck_i3_config
    
    # Run stow
    run_stow
    msg "Done"
}

# Execute main
main
